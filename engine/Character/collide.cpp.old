#include "../Character.hpp"
/*
void Character::collide(std::vector<sf::RectangleShape> &objects) {
        for(int i = 0; i < objects.size(); i++) {
            if() {
                
            }
        }
}*/

void Character::collide(std::vector<sf::RectangleShape> &objects) {
    for(int i = 0; i < objects.size(); i++) {
        if(i == 0) {
            continue;
        }
        if(sf::FloatRect(objectBumpers[0].getGlobalBounds()).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[0] = 1;
        }

        if(sf::FloatRect(objectBumpers[1].getGlobalBounds()).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[1] = 1;
        }

        if(sf::FloatRect(objectBumpers[2].getGlobalBounds()).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[2] = 1;
        }

        if(sf::FloatRect(objectBumpers[3].getGlobalBounds()).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[3] = 1;
        }
    }
}

/*
void Character::collide(std::vector<sf::RectangleShape> &objects) {
    for(int i = 0; i < objects.size(); i++) {
        if(i == 0) {
            continue;
        }
        if(sf::FloatRect(objectBumpers[0].getPosition().x + 1, objectBumpers[0].getPosition().y, objectBumpers[0].getSize().x, objectBumpers[0].getSize().y).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[0] = 1;
        }

        if(sf::FloatRect(objectBumpers[1].getGlobalBounds()).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[1] = 1;
        }

        if(sf::FloatRect(objectBumpers[2].getGlobalBounds()).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[2] = 1;
        }

        if(sf::FloatRect(objectBumpers[3].getGlobalBounds()).intersects(sf::FloatRect(objects[i].getGlobalBounds()))) {
            objectCollides[3] = 1;
        }
    }
}
*/